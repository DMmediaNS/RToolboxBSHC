---
date: "2016-04-09T16:50:16+02:00"
title: Uvoz podataka u R
output: 
  learnr::tutorial
weight: 8
---

Prva je velika stvar u upravljanju podacima u R-u. 

Najverovatnije je da imate iskustvo u pregledanju, organizovanju i istraživanju vaših podataka u Excel-u.

Otvaranje podataka u R-u prilično je jednostavno, ali njihovo organizovanje za analizu potrebno je da se oni prethodno i promisle. Pretpostavljate da pomoću komandi iz glavnog menija **File | Import Dataset** u R studiju možete uvesti vaše podatke (za više pogledajte [Importing Data with RStudio](https://support.rstudio.com/hc/en-us/articles/218611977-Importing-Data-with-RStudio)), međutim mi ćemo to uraditi na pravi način upotrebom komande.

U R možete uvesti sledeće tipove podataka:

- (Tab, Blank space) Delimited Text
- CSV files
- Excel files
- JSON 
- SAS
- STATA
- MiniTab
- SPSS...

U ovom poglavlju pokazaćemo vam kako da pristupite uobičajene tipove podataka. Jednom kada počnete da se igrate sa podacima i menjati ih na način koji vam odgovara za vašu analizu, biće vam zanimljivo istražiti kako možete podatke sami pisati. Ovde, međutim, nećemo vam pokazati kako to da uradite, već ćemo se fokusirati na osnovnu funkcionalnost funkcije `read` u R-u. 

### R baza

Najednostavnija forma podataka je [text file](https://en.wikipedia.org/wiki/Text_file). Text fajl može da pročita bilo koji operativni sistem kao i velik broj različitih statističkih programa. Čuvanje vaših podataka u tekst fajlu čini vaše podatke lako dostupnim svima. Ukoliko imate tekst fajl sa podacima koje želite da koristite, možete ih jednostavno uvesti sa funkcijom **R Baze (R base)** `read.table()`

Sledeća naredba čita fajl u tabelarnom formatu i kreira data okvir

```
# Read tabular data into R
df_txt <- read.table(file_name.txt, header = FALSE)
```

Postoji mnogo paketa koji vam omogućuju uvoz podataka u R, a mi ćemo početi od `CSV` fajlova s obzirom da su oni najčešći.

Zarezom odvojeni fajlovi najčešći je način snimanja podatake u tabelama, jer oni nisu zaštićeni niti traže licencirane programe za njihovo otvaranje. Uvoz `CSV` fajla je deo baze R i možete to uraditi pomoću funkcije `read.csv()`. 


##### `read.csv()`

Pogledajmo sad internet stranicu <https://data.gov.rs/> otvorenih podataka Srbije. Posebno, obratićemo pažnju na fajl [Kvalitet vazduha 2017: pm2.5_2017.csv](https://data.gov.rs/sr/datasets/kvalitet-vazduha-2017/) i njega ćemo uvesti u R.

Ovaj fajl neće snimiti na naše računare, već ćemo ih uvesti u R direktno sa interneta koristeći dati link.

```{r}
df_csv <- read.csv("http://data.sepa.gov.rs/dataset/ca463c44-fbfa-4de9-9a75-790995bf2830/resource/62983880-6fcd-4c65-b57c-fd4de5c367c8/download/pm2.5_2017.csv", stringsAsFactors = FALSE)
head(df_csv, 10)
```

Na drugi način možete uvesti ove podatke tako što ćete ih snimiti u svoj radni direktorijum.

Preuzmimo sad fajl ["Kvalitet vazduha 2017-SO2: 2017-SO2.csv"](https://data.gov.rs/sr/datasets/r/f425e6a5-95ae-4e2b-ab73-1d0b293b4522)
i snimimo ga u naš radni direktorijum našeg R projekta pre nego što počnemo da ga koristimo

```
df_csv <- read.csv("2017-so2.csv", stringsAsFactors = FALSE, fileEncoding = "latin1")
```

{{% notice info %}}
Ponovo pokrenite kode prikazan gore, ali ovog puta bez argumenta `stringsAsFactors`, tako što ćemo ga ukloniti ili mu staviti znak jednakosti sa TRUE. Možete li nam reći kakva je razlika pre i posle? Šta mislite zašto koristimo argument  `fileEncoding`?
{{% /notice %}}

Kako vam se čine ovaj set podataka koji ste uvezli? 🤔

#### Upotreba readr::read_csv()

`readr` je paket koji čita pravougaone podatke znatno brže od **baze R** `read.cdv()`. Pored toga ovaj paket i njegova `read.csv()` funkcija pretpostavlja karaktere kao stringove, a ne kao faktore.

Da biste videli kako je lako koristiti druge pakete za uvoz podataka u R, ilustrovaćemo to upotrebom read.csv() funkcije.

```
## If you don't have readr installed yet, uncomment and run the line below
# install.packages("readr")
library(readr)
df_csv <- read_csv("air_quality_by_station.csv")
df_csv
```

{{% notice note %}}
Proverite `readr::read_delim()` funkciju za efikasnije ograđivanje podataka iz fajlova.
{{% /notice %}}

### Uvoz excel fajlova sa `readxl`

Uvoz podataka iz Excel fajlova nije tako jednostavno, s obzirom da ti fajlovi mogu sadržavati više šitova. Fokusiraćemo se na upotrebu `readxl` paketa s obzirom da se on do sada pokazao kao najefikasniji za taj posao.  

{{% notice warning %}}
Da biste pristupili podacima iz Excel shita možete jednostavno samo kopitari i umetnuti URL fajla. Međutim taj fajl trebate prethodno snimiti.
{{% /notice %}}

Sada ćemo snimiti podatke iz Excel fajla sa stranice otvorenih podataka [data.gov.rs](https://data.gov.rs/) podatke o saobraćajnim nesrećama [Подаци о саобраћајним незгодама до 31.08.2019. године за територију свих ПОЛИЦИЈСКИХ УПРАВА и ОПШТИНА](https://data.gov.rs/sr/datasets/r/134b2867-8a35-4f00-ac48-1610dca177ec). 

Ukoliko ne možete da otvorite fajl u Excelu da vidite koliko šitova taj fajl ima, pokušajte pročitati fajl iz R-a tako što ćete pristupiti prvom šitu funkcijom `read_excel()`. Pre toga, uverite se da ste snimili taj fajl u radni direktorijum vašeg R projekta, i to pre nego što ga pokušate izvršiti sledeći prikazan kod:

```
## If you don't have readxl installed yet, uncomment the line below and run it 
#install.packages("readxl")
library(readxl)
df_xl <- read_excel("nez-opendata-20199-20190925.xlsx", sheet = 1)
```

Šta mislite?

{{% notice warning %}}
Ljudi uobičajeno ulepšavaju i formatiraju svoje excel fajlove, a to može prouzrokovati probleme u njihov uvoz u R.
{{% /notice %}}

Istražite argumente funkcije `read_excel()`, poput `skip` argumenta sa kojim možete da specifikujete minimalni broj redova koje ne želite da učitate iz fajla.

### Uvoz podataka upotrebom `jsonlite`

Ukoliko želite da uvezete JSON fajl u R upotrebljavaćete `jsonlite` paket. Potrebno je da ukažete na fajl tako što ćete ovoj funkciji obezbediti lokalnu putanju do njega, ukoliko se on već nalazi na vašem računaru ili jednostavno samo URL ukoliko želite da uveze sa interneta. 

```{r}
## If you don't have readxl installed yet, uncomment the line below and run it 
#install.packages("jsonlite")
library(jsonlite)
my_url <-"https://data.gov.rs/sr/datasets/r/41c2fe91-4ea1-4a64-b33c-183665ea6ab3"
polen <- fromJSON(my_url)
```

Pogledajte sad strukturu `polen-a`! 😰

```{r}
str(polen)
names(polen)
```

Napomena: komanda `polen$results` je okvir podataka koji sadrži listu `koncentracija (concentrations)` kao svoj element.

Ouch! 😳 JSON fajlovi nisu baš uredni 😱 Oni su često ugnježđeni, povezani -> shvatili ste: Vrlo neuredno! 😫 Dakle, ostavićemo ih takvim. 😬 IAko vam je potrebno da saznate više o čitanju JSON fajlova u R-u možete dodatno istražiti funckionalnost paketa `jsonlite` ili pronađite na stranici [Getting started with JSON and jsonlite](https://cran.r-project.org/web/packages/jsonlite/vignettes/json-aaquickstart.html). Blog [Working with JSON data in very simple way](https://blog.exploratory.io/working-with-json-data-in-very-simple-way-ad7ebcc0bb89) autora [Kan Nishida](https://blog.exploratory.io/@kanaugust) u njemu ćete naći odlične primere kako možete koristiti ove podatke u R-u. 

### Drugi formati podataka

Da biste ubrzali procesa čitanja txt, csv fajlova možete koristiti `data.table::fread()` funkciju. Potrebno je da ovoj funkciju samo obezbedite ime fajla u kom se nalaze podaci koje želite da uvezete, a `fread()` će pokušati da vam uveze odgovarajuću njihovu strukturu. Pogledajte ovaj blog [Getting Data From An Online Source](https://www.r-bloggers.com/getting-data-from-an-online-source/) da vidite još neke ideje za uvoz podataka. 

R zajedno sa odgovarajućim paketima možete koristiti i za uvoz drugih formata podataka. Paket `haven` omogućuje vam funkcije za uvoz SAS, SPSS i Stata fajlova ili možete upotrebljavati `foreign` paket za MiniTab fajlova. Pregledajte help sekciju paketa sa kojim želite da se upoznate ali i da otkrijete koje sve druge opcije on poseduje.


## ZADACI 👇

1) Pregledajte stranicu otvorenih podataka <https://data.gov.rs/> i pronađite temu koja vas zanima.

2) Pogledajte setove podataka na ovoj stranici koja se nalazi u odeljku:  [saobracaj](https://data.gov.rs/sr/datasets/podatsi-o-saobratshajnim-nezgodama-po-politsijskim-upravama-i-opshtinama/). Razmislite koje pitanja možete postaviti na osnovu tih podataka.



-----------------------------
© 2019 Tatjana Kecojevic